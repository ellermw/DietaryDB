version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: dietary_postgres
    environment:
      POSTGRES_DB: dietary_db
      POSTGRES_USER: dietary_user
      POSTGRES_PASSWORD: DietarySecurePass2024!
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - dietary_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dietary_user -d dietary_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: dietary_backend
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: dietary_db
      DB_USER: dietary_user
      DB_PASSWORD: DietarySecurePass2024!
      JWT_SECRET: your-secret-key-change-this-in-production
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dietary_network
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: unless-stopped
    command: npm start

  admin:
    build: ./admin-frontend
    container_name: dietary_admin
    ports:
      - "3001:80"
    depends_on:
      - backend
    networks:
      - dietary_network
    volumes:
      - ./admin-frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped

networks:
  dietary_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
